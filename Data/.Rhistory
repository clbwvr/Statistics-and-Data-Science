x <- rnorm(100,0,1)
y <- -1 + 0.5*x + eps
eps <- rnorm(100,0,.25)
y <- -1 + 0.5*x + eps
length(y)
plot(x,y,pch=20)
par(mfrow=c(1,1))
plot(x,y,pch=20)
fit <- lm(y~x)
summary(fit)
abline(fit,color="purple")
abline(fit,col="purple",lwd=2)
legend()
abline(fit,col="purple",lwd=2)
legend()
?legend
legend(1)
legend(0,0)
?legend
abline(a = -1, b = .5)
abline(fit,col="purple",lwd=2)
abline(a = -1, b = .5, col="green",lwd=2)
abline(fit,col="purple")
abline(a = -1, b = .5, col="green")
legend((0,0, pch=c(2,2), col=c("purple”, “green”), c(“Least Squares Line”, “Pop Reg Line”))
abline(fit,col="purple")
abline(a = -1, b = .5, col="green")
legend(0,0, pch=c(2,2), col=c("purple”, “green”), c(“Least Squares Line”, “Pop Reg Line”))
```
legend(0,0, pch=c(2,2), col=c("purple","green"), c("Least Squares Line”, “Pop Reg Line”))
1+2
abline(fit,col="purple")
abline(a = -1, b = .5, col="green")
legend(0,0, pch=c(2,2), col=c("purple","green"), c("Least Squares Line”, “Pop Reg Line”))
)
)
)
""
"
legend(0,0, pch=c(2,2), col=c("purple","green"), c("Least Squares Line", "Pop Reg Line""))
legend(0,0, pch=c(2,2), col=c("purple","green"), c("Least Squares Line", "Pop Reg Line"))
legend(0,0, pch=c(2,2), col=c("purple","green"), c("Least Squares Line", "Pop Reg Line"))
legend(left, pch=c(2,2), col=c("purple","green"), c("Least Squares Line", "Pop Reg Line"))
legend(left, pch=c(2,2), col=c("purple","green"), c("Least Squares Line", "Pop Reg Line"))
legend("topleft", pch=c(2,2), col=c("purple","green"), c("Least Squares Line", "Pop Reg Line"))
legend("topleft", pch=c(2,2), col=c("purple","green"), c("Least Squares Line", "Pop Reg Line") lty="solid")
abline(fit,col="purple")
abline(a = -1, b = .5, col="green")
legend("topleft", pch=c(2,2), col=c("purple","green"), c("Least Squares Line", "Pop Reg Line") lty="solid")
abline(fit,col="purple")
abline(a = -1, b = .5, col="green")
legend("topleft", pch=c(2,2), col=c("purple","green"), c("Least Squares Line", "Pop Reg Line"), lty="solid")
abline(fit,col="purple")
abline(fit,col="purple")
abline(a = -1, b = .5, col="green")
plot(x,y,pch=20)
abline(fit,col="purple")
abline(a = -1, b = .5, col="green")
legend("topleft", pch=c(2,2), col=c("purple","green"), c("Least Squares Line", "Pop Reg Line"), lty="solid")
legend("topleft", fil=c("purple","green"), c("Least Squares Line", "Pop Reg Line"), lty="solid")
legend("topleft", fil=c("purple","green"), c("Least Squares Line", "Pop Reg Line"))
plot(x,y,pch=20)
abline(fit,col="purple")
abline(a = -1, b = .5, col="green")
legend("topleft", fil=c("purple","green"), c("Least Squares Line", "Pop Reg Line"))
fit1 <- lm(y~x)
fit2 <- lm(y~x+I(x^2))
summary(fit2)
anova(fit1,fit2)
(7.3207/98) / (7.1743/97)
x <- rnorm(100,0,1)
eps <- .1*rnorm(100,0,.25)
y <- -1 + 0.5*x + eps
plot(x,y,pch=20)
eps <- .2*rnorm(100,0,.25)
y <- -1 + 0.5*x + eps
plot(x,y,pch=20)
eps <- rnorm(100,0,.25)
y <- -1 + 0.5*x + eps
plot(x,y,pch=20)
eps <- 5*rnorm(100,0,.25)
y <- -1 + 0.5*x + eps
plot(x,y,pch=20)
eps <- 2*rnorm(100,0,.25)
y <- -1 + 0.5*x + eps
plot(x,y,pch=20)
eps <- 3*rnorm(100,0,.25)
y <- -1 + 0.5*x + eps
plot(x,y,pch=20)
abline(fit,col="purple")
abline(a = -1, b = .5, col="green")
eps <- 5*rnorm(100,0,.25)
y <- -1 + 0.5*x + eps
plot(x,y,pch=20)
fit <- lm(y~x)
summary(fit)
abline(fit,col="purple")
abline(a = -1, b = .5, col="green")
x <- rnorm(100,0,1)
eps <- .2*rnorm(100,0,.25)
y <- -1 + 0.5*x + eps
plot(x,y,pch=20)
fit <- lm(y~x)
summary(fit)
abline(fit,col="purple")
abline(a = -1, b = .5, col="green")
legend("topleft", fil=c("purple","green"), c("Least Squares Line", "Pop Reg Line"))
anova(fit1,fit2)
fit2 <- lm(y~x+I(x^2))
fit1 <- lm(y~x)
fit2 <- lm(y~x+I(x^2))
anova(fit1,fit2)
x <- rnorm(100,0,1)
eps <- 5*rnorm(100,0,.25)
y <- -1 + 0.5*x + eps
plot(x,y,pch=20)
fit <- lm(y~x)
summary(fit)
abline(fit,col="purple")
abline(a = -1, b = .5, col="green")
legend("topleft", fil=c("purple","green"), c("Least Squares Line", "Pop Reg Line"))
fit1 <- lm(y~x)
fit2 <- lm(y~x+I(x^2))
anova(fit1,fit2)
fit1 <- lm(y~x)
summary(fit)
confint(fit)
confint(fit)
confint(fit.less.noise)
x <- rnorm(100,0,1)
eps <- .2*rnorm(100,0,.25)
y <- -1 + 0.5*x + eps
plot(x,y,pch=20)
fit.less.noise <- lm(y~x)
summary(fit.less.noise)
abline(fit.less.noise,col="purple")
abline(a = -1, b = .5, col="green")
legend("topleft", fil=c("purple","green"), c("Least Squares Line", "Pop Reg Line"))
fit.less.noise.1 <- lm(y~x)
fit.less.noise.2 <- lm(y~x+I(x^2))
anova(fit1.less.noise.1,fit.less.noise.2)
anova(fit.less.noise.1,fit.less.noise.2)
x <- rnorm(100,0,1)
eps <- 5*rnorm(100,0,.25)
y <- -1 + 0.5*x + eps
plot(x,y,pch=20)
fit.more.noise <- lm(y~x)
summary(fit.more.noise)
abline(fit.more.noise,col="purple")
abline(a = -1, b = .5, col="green")
legend("topleft", fil=c("purple","green"), c("Least Squares Line", "Pop Reg Line"))
fit.more.noise.1 <- lm(y~x)
fit.more.noise.2 <- lm(y~x+I(x^2))
anova(fit.more.noise.1,fit.more.noise.2)
confint(fit)
confint(fit.less.noise)
confint(fit.more.noise)
set.seed(1)
x <- rnorm(100,0,1)
eps <- rnorm(100,0,.25)
y <- -1 + 0.5*x + eps
length(y)
plot(x,y,pch=20)
summary(fit)
abline(fit,col="purple")
abline(a = -1, b = .5, col="green")
legend("topleft", fil=c("purple","green"), c("Least Squares Line", "Pop Reg Line"))
y <- -1 + 0.5*x + eps
eps <- rnorm(100,0,.25)
y <- -1 + 0.5*x + eps
plot(x,y,pch=20)
fit <- lm(y~x)
summary(fit)
abline(fit,col="purple")
abline(a = -1, b = .5, col="green")
legend("topleft", fil=c("purple","green"), c("Least Squares Line", "Pop Reg Line"))
```
fit1 <- lm(y~x)
fit2 <- lm(y~x+I(x^2))
anova(fit1,fit2)
x <- rnorm(100,0,1)
eps <- 5*rnorm(100,0,.25)
y <- -1 + 0.5*x + eps
plot(x,y,pch=20)
fit.more.noise <- lm(y~x)
summary(fit.more.noise)
abline(fit.more.noise,col="purple")
abline(a = -1, b = .5, col="green")
legend("topleft", fil=c("purple","green"), c("Least Squares Line", "Pop Reg Line"))
fit.more.noise.1 <- lm(y~x)
fit.more.noise.2 <- lm(y~x+I(x^2))
anova(fit.more.noise.1,fit.more.noise.2)
prob <- function(x1,x2){
return(-6 + .05*x1 + 1*x2)
}
prob(40,3.5)
prob <- function(x1,x2){
return(exp(-6 + .05*x1 + 1*x2) / (1+exp(-6 + .05*x1 + 1*x2))
}
prob(40,3.5)
prob <- function(x1,x2){
return(exp(-6 + .05*x1 + 1*x2) / (1+exp(-6 + .05*x1 + 1*x2)))
}
prob(40,3.5)
prob(80,4)
prob(10000,4)
prob(1,4)
x<- 0:80
z<-prob(x,3.5)
plot(x,z)
prob <- function(x1,x2){
return(exp(-6 + .05*x1 + 1*x2) / (1+exp(-6 + .05*x1 + 1*x2)))
}
prob(1,4)
x<- 0:80
z<-prob(x,3.5)
plot(x,z,xlim=c(0,100))
x<- 0:100
z<-prob(x,3.5)
plot(x,z,xlim=c(0,100))
### (b) How many hours would the student in part (a) need to study to have a 50% chance of getting an A in the class?
plot(x,z,xlim=c(0,100))
z<-prob(x,1.5)
plot(x,z,xlim=c(0,100))
prob(1,4)
x<- 0:1000
z<-prob(x,1.5)
plot(x,z,xlim=c(0,1000))
x<- 0:200
z<-prob(x,1.5)
plot(x,z,xlim=c(0,1000))
plot(x,z,xlim=c(0,200))
prob(40,3.5)
x1<-1
while(T){
p <- prob(x1,3.5)
if(p >= .5){
return(x1)
}
x1 <- x1+1
}
function(){
while(T){
p <- prob(x1,3.5)
if(p >= .5){
return(x1)
}
x1 <- x1+1
}
}
hours.for.probability <- function(p,x2){
x1 <- 1
while(T){
if(prob(x1,x2) >= p){
return(x1)
}
x1 <- x1+1
}
}
hours.for.probability(.5,3.5)
hours.for.probability(.9,3.5)
prob <- function(x1,x2){
return(exp(-6 + .05*x1 + 1*x2) / (1+exp(-6 + .05*x1 + 1*x2)))
}
prob(40,3.5)
exp(-6 + .05*40 + 1*3.5) / (1 + exp(-6 + .05*40 + 1*3.5))
log(1)
2.5/0.5
$$ X1 = 2.5/0.05
2.5/.05
if(prob(x1,x2) >= p){
hours.for.probability <- function(p,x2){
x1 <- 1
while(T){
if(prob(x1,x2) >= p){
return(x1)
}
x1 <- x1+1
}
}
hours.for.probability(.5,3.5)
hours.for.probability <- function(p,x2){
x1 <- 1
while(T){
if(prob(x1,x2) >= p){
return(x1)
}
x1 <- x1+1
}
}
hours.for.probability(.5,3.5)
.37/1.37
.27/100
.27/.63
.27/.73
.270073/.73
.16/84
.16/.84
.19/1.19
?Auto
The correlation between the two is -.78 and the R squared is .61. These are relatively strong relationships. about 61% of the variance seen in mpg is explained by horsepower.
library(MASS)
attach(birthwt)
?birthwt
?birthwt
?birthwt
summary(glm(low~age,family = "binomial"))
?birthwt
summary(glm(low~lwt,family = "binomial"))
predict(birthwt,type="response")
summary(fit <- glm(low~lwt,family = "binomial"))
predict(fit,type="response")
birthwt$low == predict(fit,type="response"))
birthwt$low == predict(fit,type="response")
a<-predict(fit,type="response")
a
a>.5
fit <- glm(low~lwt,family = "binomial")
summary(fit)
plot(low,lwt)
plot(ltw,low)
plot(lwt,low)
?birthwt
?birthwt
attach(birthwt)
fit <- glm(low~age+bwt+ftv+low+lwt+ptl+race+smoke+ui,family = "binomial")
summary(fit)
fit <- glm(low~age+bwt+ftv+low,family = "binomial")
summary(fit)
require(ggplot2)
data <- read.table("lowbirthweight.dat", header = T)
attach(data)
fit <- glm(LOW ~ AGE + LWT + SMOKE + UI + RACE, family = binomial)
attach(data)
data <- read.table("lowbirthweight.dat", header = T)
setwd("C:/Users/Caleb/Dropbox/Masters Program/ST512/Projects")
setwd("C:/Users/Caleb/Dropbox/GitFiles/Statistics and Data Science/Data")
data <- read.table("lowbirthweight.dat", header = T)
data <- read.table("https://www.umass.edu/statdata/statdata/data/lowbwt.dat", header = T)
data <- read.table("https://www.umass.edu/statdata/statdata/data/lowbwt.dat")
data <- read.table("https://www.umass.edu/statdata/statdata/data/lowbwt.dat")
y<-c(runif(50,0,1),runif(50,1,2))
x<-c(runif(50,0,5),runif(50,5,10)
y<-(c(rbinom(50,1,.2),rbinom(50,1,.8))
x<-c(runif(50,0,5),runif(50,5,10))
y<-(c(rbinom(50,1,.2),rbinom(50,1,.8))
x<-c(runif(50,0,5),runif(50,5,10))
x<-c(runif(50,0,5),runif(50,5,10))
y<-c(rbinom(50,1,.2),rbinom(50,1,.8))
plot(x,y)
x<-c(runif(50,0,5),runif(50,5,10))
y<-c(rbinom(50,1,.1),rbinom(50,1,.9))
plot(x,y)
fit <- glm(y~x,family = "binomial")
fit
summary(fit)
predict(fit)
predict(fit,type="response")
plot(fit)
plot(x,y)
curve(pred,add=TRUE)
pred<-predict(fit,type="response")
plot(x,y)
curve(pred,add=TRUE)
curve(pred,add=TRUE)
?curve
points(pred,add=TRUE)
pred<-predict(fit,type="response")
pred<-predict(fit,type="response")
pred
plot(1:length(pred), sorted(pred))
plot(1:length(pred), sort(pred))
lines(pred,add=TRUE)
points(pred,add=TRUE)
pred <- (pred>.5)+0
pred <- (pred>.5)+0
pred==y
mean(pred==y)
idx <- sample(1:50,40,F)
idx <- sample(1:50,40,F)
train <- y[idx]
train <- y[-idx]
train <- y[idx]
train <- y[-idx]
test <- y[-(idx)]
train <- y[idx]
idx <- sample(1:50,40,F)
train <- y[idx]
idx
train <- y[idx]
test <- y[-(idx)]
-(idx)
test <- y[!idx]
-idx
test <- y[-idx]
test <- y[-c(idx)]
test <- y[!rownames(y) %in% rownames(train)]
rownames(y) %in% rownames(train)]
rownames(y) %in% rownames(train)
sorted(idx)
sort(idx)
sort(idx) %in% 1:50
1:50 %in% sort(idx)
test <- y[1:length(train) %in% sort(idx) ]
1:length(y) %in% sort(idx)
idx <- sample(1:100,80,F)
train <- y[idx]
test <- y[-idx]
fit <- glm(train~x,family = "binomial")
fit <- glm(y[trainidx]~x[trainidx],family = "binomial")
trainidx <- sample(1:100,80,F)
fit <- glm(y[trainidx]~x[trainidx],family = "binomial")
summary(fit)
pred<-predict(fit,newdata=x[-trainidx],type="response")
x[-trainidx]
pred<-predict(fit,newdata=x[-trainidx],type="response")
pred<-predict(fit,newdata=data.frame(x[-trainidx]),type="response")
pred <- (pred>.5)+0
pred<-predict(fit,newdata=data.frame(x[-trainidx]),type="response")
x <- rnorm(10)
e <- rnorm(10,.2)
y <- 1.5*x + e
plot(x,y,pch=20)
x <- rnorm(10)
e <- rnorm(10,.01)
y <- 1.5*x + e
plot(x,y,pch=20)
x <- rnorm(10)
e <- rnorm(10,.005)
y <- 1.5*x + e
plot(x,y,pch=20)
x <- 5 + rnorm(10)
e <- rnorm(10,.05)
y <- 1.5*x + e
plot(x,y,pch=20)
x <- rnorm(10)
e <- rnorm(10,.05)
y <- 1.5*x + e
plot(x,y,pch=20)
e <- rnorm(10,.01)
y <- 1.5*x + e
plot(x,y,pch=20)
summary(lm(y~x))
summary(fit<-lm(y~x))
abline(fit)
points(predict)
points(predict(fit))
predict(fit)
points(x,predict(fit))
points(x,predict(fit),col="red")
points(x,predict(fit),col="red",pch=20)
x <- rnorm(10)
e <- rnorm(10,.01)
y <- 1.5*x + e
plot(x,y,pch=20)
summary(fit<-lm(y~x))
abline(fit)
points(x,predict(fit),col="red",pch=20)
x <- rnorm(10)
e <- rnorm(10,.01)
y <- 1.5*x + e
plot(x,y,pch=20)
summary(fit<-lm(y~x))
abline(fit)
points(x,predict(fit),col="red",pch=20)
ybar <- predict(fit)
points(x,ybar,col="red",pch=20)
rss<- sum((y - ybar)^2)
fit <- lm(mpg~hp, data=mtcars)
rss <- sum(residuals(fit)^2)
mse <- mean(residuals(fit)^2)
mse
plot(mpg~hp, data=mtcars, pch=20)
fit <- lm(mpg~hp, data=mtcars)
summary(fit)
library(MASS)
fit <- lda(Direction~Lag1+Lag2,subset=train)
lda.fit=lda(Direction∼Lag1+Lag2 ,data=Smarket ,subset =train)
lda.fit=lda(Direction∼Lag1+Lag2 ,data=Smarket)
idx <- sample(1:nrow(Smarket))
idx <- sample(1:nrow(Smarket),.8*nrow(Smarket))
idx
dim(Smarket)
length(idx)
train <- Smarket[idx,]
tset <- Smarket[-idx,]
library(MASS)
idx <- sample(1:nrow(Smarket),.8*nrow(Smarket))
train <- Smarket[idx,]
tset <- Smarket[-idx,]
fit <- lda(Direction~Lag1+Lag2,data = train)
fit
train <- Smarket[Year!="2015"]
train <- Smarket[Year!=2015]
train <- Smarket[SMarket$Year!=2015]
train <- Smarket[Smarket$Year!=2015]
train <- Smarket[Year!=2015]
Smarket$Year
Smarket$Year!=2015
train <- Smarket[Smarket$Year!=2015]
train <- Smarket[Smarket$Year!=2015,]
test <- Smarket[Smarket$Year==2015,]
type.of(Smarket$Year)
typeof(Smarket$Year)
test <- Smarket[Smarket$Year2015,]
test <- Smarket[Smarket$Year==2015,]
Smarket$Year==2015
Smarket$Year=2015
=
library(MASS)
Smarket
Smarket$Year
